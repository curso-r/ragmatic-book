unnest(ling) %>%
mutate(ling = str_replace(ling, '\\.$', ''),
ling = fct_infreq(ling)) %>%
group_by(cec) %>%
mutate(ntot = n_distinct(id_pessoa)) %>%
group_by(cec, ling) %>%
summarise(n = n_distinct(id_pessoa), ntot = first(ntot)) %>%
mutate(prop = n / ntot) %>%
ungroup() %>%
mutate(ling = str_wrap(ling, 20) %>% fct_reorder(prop, .desc = TRUE)) %>%
ggplot(aes(x = ling, fill = cec, y = prop)) +
geom_bar(position = 'dodge', stat = 'identity') +
scale_y_continuous(labels = scales::percent, limits = c(0, .7)) +
geom_text(aes(label = scales::percent(prop),
group = cec), position = position_dodge(.9), vjust = -.2) +
theme_bw(14) +
xlab('Linguagem de programação') +
ylab('')
d_alunos %>%
gather(questao, resposta, matches('^[2]')) %>%
replace_na(list(resposta = 'Nenhuma')) %>%
mutate(ling = str_split(resposta, '\\., ')) %>%
unnest(ling) %>%
mutate(ling = str_replace(ling, '\\.$', ''),
ling = fct_infreq(ling)) %>%
group_by(cec) %>%
mutate(ntot = n_distinct(id_pessoa)) %>%
group_by(cec, ling) %>%
summarise(n = n_distinct(id_pessoa), ntot = first(ntot)) %>%
mutate(prop = n / ntot) %>%
ungroup() %>%
mutate(ling = str_wrap(ling, 20) %>% fct_reorder(prop, .desc = TRUE)) %>%
ggplot(aes(x = ling, fill = cec, y = prop)) +
geom_bar(position = 'dodge', stat = 'identity') +
scale_y_continuous(labels = scales::percent, limits = c(0, .7)) +
geom_text(aes(label = scales::percent(prop),
group = cec), position = position_dodge(.9), vjust = -.2) +
theme_bw(14) +
xlab('Linguagem de programação') +
ylab('')
d_alunos %>%
gather(questao, resposta, matches('^[13]')) %>%
replace_na(list(resposta = 'Não.')) %>%
count(cec, questao, resposta) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = str_wrap(resposta, 25), fill = cec, y = prop)) +
geom_bar(position = 'dodge', stat = 'identity') +
facet_wrap(~questao, scales = 'free_x', ncol = 1) +
scale_y_continuous(labels = scales::percent) +
geom_text(aes(label = scales::percent(prop),
group = cec), position = position_dodge(.9), vjust = -.2) +
theme_bw(14) +
xlab('') +
ylab('Proporção de inscritos')
library(lubridate)
d1 <- '04/15/06'
dym(d1)
mdy_hms(d3)
d3 <- '07022016 10:11:47'
mdy_hms(d3)
ymd(d2) %>% class
d2 <- '2015-01-02'
ymd(d2) %>% class
mdy_hms(d3) %>% class
c(ymd(d2),mdy_hms(d3))
class
c(ymd(d2),mdy_hms(d3)) %>% class
`&`
a <- c(1, 2, 3)
b <- c(1, 2, 3, 4, 5, 6)
a + b
a <- c(1, 2, 3)
b <- c(1, 2, 3, 4, 5, 6)
a + b
file.copy('~/Projects/curso/data-raw/d_cjsg.rds', 'data/')
d_cjsg <- readRDS('data/d_cjsg.rds')
d_alunos %>%
replace_na(list(esc = 'Outra')) %>%
mutate(esc = fct_infreq(esc)) %>%
ggplot(aes(x = esc, fill = cec)) +
geom_bar(position = 'dodge') +
theme_bw(14) +
xlab('') +
ylab('Quantidade de inscritos')
d_alunos %>%
gather(questao, resposta, matches('^[13]')) %>%
replace_na(list(resposta = 'Não.')) %>%
count(cec, questao, resposta) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = str_wrap(resposta, 20), fill = cec, y = prop)) +
geom_bar(position = 'dodge', stat = 'identity') +
facet_wrap(~questao, scales = 'free_x', ncol = 1) +
scale_y_continuous(labels = scales::percent) +
geom_text(aes(label = scales::percent(prop), group = cec),
position = position_dodge(.9), vjust = -.2) +
theme_bw(14) +
xlab('') +
ylab('Proporção de inscritos')
d_alunos %>%
gather(questao, resposta, matches('^[13]')) %>%
replace_na(list(resposta = 'Não.')) %>%
count(cec, questao, resposta) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = str_wrap(resposta, 20), fill = cec, y = prop)) +
geom_bar(position = 'dodge', stat = 'identity') +
facet_wrap(~questao, scales = 'free_x', ncol = 1) +
scale_y_continuous(labels = scales::percent) +
geom_text(aes(label = scales::percent(prop), group = cec),
position = position_dodge(.9), vjust = -.2) +
theme_light(14) +
xlab('') +
ylab('Proporção de inscritos')
d_alunos %>%
gather(questao, resposta, matches('^[13]')) %>%
replace_na(list(resposta = 'Não.')) %>%
count(cec, questao, resposta) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = str_wrap(resposta, 20), fill = cec, y = prop)) +
geom_bar(position = 'dodge', stat = 'identity') +
facet_wrap(~questao, scales = 'free_x', ncol = 1) +
scale_y_continuous(labels = scales::percent) +
geom_text(aes(label = scales::percent(prop), group = cec),
position = position_dodge(.9), vjust = -.2) +
theme_linedraw(14) +
xlab('') +
ylab('Proporção de inscritos')
d_alunos %>%
gather(questao, resposta, matches('^[13]')) %>%
replace_na(list(resposta = 'Não.')) %>%
count(cec, questao, resposta) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = str_wrap(resposta, 20), fill = cec, y = prop)) +
geom_bar(position = 'dodge', stat = 'identity') +
facet_wrap(~questao, scales = 'free_x', ncol = 1) +
scale_y_continuous(labels = scales::percent) +
geom_text(aes(label = scales::percent(prop), group = cec),
position = position_dodge(.9), vjust = -.2) +
theme_void(14) +
xlab('') +
ylab('Proporção de inscritos')
d_alunos %>%
gather(questao, resposta, matches('^[13]')) %>%
replace_na(list(resposta = 'Não.')) %>%
count(cec, questao, resposta) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = str_wrap(resposta, 20), fill = cec, y = prop)) +
geom_bar(position = 'dodge', stat = 'identity') +
facet_wrap(~questao, scales = 'free_x', ncol = 1) +
scale_y_continuous(labels = scales::percent) +
geom_text(aes(label = scales::percent(prop), group = cec),
position = position_dodge(.9), vjust = -.2) +
theme_minimal(14) +
xlab('') +
ylab('Proporção de inscritos')
d_alunos %>%
gather(questao, resposta, matches('^[13]')) %>%
replace_na(list(resposta = 'Não.')) %>%
count(cec, questao, resposta) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = str_wrap(resposta, 20), fill = cec, y = prop)) +
geom_bar(position = 'dodge', stat = 'identity') +
facet_wrap(~questao, scales = 'free_x', ncol = 1) +
scale_y_continuous(labels = scales::percent) +
geom_text(aes(label = scales::percent(prop), group = cec),
position = position_dodge(.9), vjust = -.2) +
theme_classic(14) +
xlab('') +
ylab('Proporção de inscritos')
d_alunos %>%
gather(questao, resposta, matches('^[13]')) %>%
replace_na(list(resposta = 'Não.')) %>%
count(cec, questao, resposta) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = str_wrap(resposta, 20), fill = cec, y = prop)) +
geom_bar(position = 'dodge', stat = 'identity') +
facet_wrap(~questao, scales = 'free_x', ncol = 1) +
scale_y_continuous(labels = scales::percent) +
geom_text(aes(label = scales::percent(prop), group = cec),
position = position_dodge(.9), vjust = -.2) +
theme_bw(14) +
theme(strip.background = element_blank()) +
xlab('') +
ylab('Proporção de inscritos')
d_alunos %>%
gather(questao, resposta, matches('^[13]')) %>%
replace_na(list(resposta = 'Não.')) %>%
count(cec, questao, resposta) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = str_wrap(resposta, 20), fill = cec, y = prop)) +
geom_bar(position = 'dodge', stat = 'identity') +
facet_wrap(~questao, scales = 'free_x', ncol = 1) +
scale_y_continuous(labels = scales::percent) +
geom_text(aes(label = scales::percent(prop), group = cec),
position = position_dodge(.9), vjust = -.2) +
theme_bw(14) +
theme(strip.background = element_blank()) +
xlab('') +
ylab('Proporção de inscritos')
d_alunos %>%
gather(questao, resposta, matches('^[13]')) %>%
replace_na(list(resposta = 'Não.')) %>%
count(cec, questao, resposta) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = str_wrap(resposta, 20), fill = cec, y = prop)) +
geom_bar(position = 'dodge', stat = 'identity') +
facet_wrap(~questao, scales = 'free_x', ncol = 1) +
scale_y_continuous(labels = scales::percent) +
geom_text(aes(label = scales::percent(prop), group = cec),
position = position_dodge(.9), vjust = -.2) +
theme_bw(14) +
theme(strip.background = element_blank()) +
xlab('') +
ylab('Proporção de inscritos')
d_alunos %>%
arrange(timestamp) %>%
mutate(um = 1, inscricoes = cumsum(um)) %>%
ggplot(aes(x = timestamp, y = inscricoes, colour = cec)) +
geom_step() +
geom_hline(yintercept = 45, colour = 'red', linetype = 2) +
scale_x_datetime(breaks = scales::date_breaks('1 day')) +
theme_bw(14) +
xlab('Data') +
ylab('Volume de inscrições')
date_breaks
date_breaks
d_alunos %>%
arrange(timestamp) %>%
mutate(um = 1, inscricoes = cumsum(um)) %>%
ggplot(aes(x = timestamp, y = inscricoes, colour = cec)) +
geom_step() +
geom_hline(yintercept = 45, colour = 'red', linetype = 2) +
scale_x_datetime(breaks = scales::date_breaks('1 day'),
labels = scales::date_format('%B %d')) +
theme_bw(14) +
xlab('Data') +
ylab('Volume de inscrições')
d_alunos %>%
arrange(timestamp) %>%
mutate(um = 1, inscricoes = cumsum(um)) %>%
ggplot(aes(x = timestamp, y = inscricoes, colour = cec)) +
geom_step() +
geom_hline(yintercept = 45, colour = 'red', linetype = 2) +
scale_x_datetime(breaks = scales::date_breaks('1 day'),
labels = scales::date_format('%b %d')) +
theme_bw(14) +
xlab('Data') +
ylab('Volume de inscrições')
d_alunos %>%
arrange(timestamp) %>%
mutate(um = 1, inscricoes = cumsum(um)) %>%
ggplot(aes(x = timestamp, y = inscricoes, colour = cec)) +
geom_step() +
geom_hline(yintercept = 45, colour = 'red', linetype = 2) +
scale_x_datetime(breaks = scales::date_breaks('1 day'),
labels = scales::date_format('%b %d')) +
scale_y_continuous(breaks = 0:4 * 25) +
theme_bw(14) +
xlab('Data') +
ylab('Volume de inscrições')
d_alunos %>%
arrange(timestamp) %>%
mutate(um = 1, inscricoes = cumsum(um)) %>%
ggplot(aes(x = timestamp, y = inscricoes, colour = cec)) +
geom_step() +
geom_hline(yintercept = 45, colour = 'red', linetype = 2) +
scale_x_datetime(breaks = scales::date_breaks('1 day'),
labels = scales::date_format('%b %d')) +
scale_y_continuous(breaks = 0:4 * 25, limits = c(0, 100)) +
theme_bw(14) +
xlab('Data') +
ylab('Volume de inscrições')
safe_log <- safely(log)
safe_log(10)
safe_log(10:100)
safe_log(c(10:100, 0))
safe_log(c(10:100, -1))
safe_log(c(10:100, a))
safe_log(c(10:100, aff))
letters
x <- factor('a', 'b', 'c')
tipeof(x)
typeof(x)
x <- factor('a', 'b', 'c')
x
typeof(x)
x <- factor(c('a', 'b', 'c'))
x
typeof(x)
x <- factor(c('6', '5', '4'))
x <- factor(c('6', '5', '4'))
as.numeric(x)
rbinom(100, 3, .5)
labs <- c('banana', 'maçã', 'laranja')[rbinom(100, 1, .5) + 1]
labs
labs %>%
qplot()
rbinom(100, 1, .5) + 1
labs <- c('banana', 'maçã', 'laranja')[rbinom(100, 2, .5) + 1]
labs %>%
qplot()
library(forcats)
labs %>%
fct_infreq() %>%
ggplot2::qplot()
labs <- c('banana', 'maçã', 'laranja', 'mamão')[rbinom(100, 2, .5) + 1]
labs %>% ggplot2::qplot()
set.seed(123)
labs <- c('banana', 'maçã', 'laranja', 'mamão')[rbinom(100, 3, .5) + 1]
labs %>% ggplot2::qplot()
set.seed(123)
labs <- c('banana', 'maçã', 'laranja', 'mamão')[rbinom(100, 3, .1) + 1]
labs %>% ggplot2::qplot()
set.seed(123)
labs <- c('banana', 'maçã', 'laranja', 'mamão')[rbinom(1000, 3, .1) + 1]
labs %>% ggplot2::qplot()
set.seed(123)
labs <- c('banana', 'maçã', 'laranja', 'mamão')[rbinom(1000, 3, .2) + 1]
labs %>% ggplot2::qplot()
labs %>% fct_infreq() %>% ggplot2::qplot()
labs %>% fct_collapse(cítrica = c('laranja', 'limão')) %>% ggplot2::qplot()
set.seed(123)
labs <- c('banana', 'maçã', 'laranja', 'limão')[rbinom(1000, 3, .2) + 1]
labs %>% ggplot2::qplot()
labs %>% fct_collapse(cítrica = c('laranja', 'limão')) %>% ggplot2::qplot()
labs %>%
fct_collapse(cítrica = c('laranja', 'limão')) %>%
fct_inorder()
labs %>%
fct_collapse(cítrica = c('laranja', 'limão')) %>%
fct_infreq() %>%
ggplot2::qplot()
d_alunos %>%
gather(questao, resposta, matches('^[2]')) %>%
replace_na(list(resposta = 'Nenhuma')) %>%
mutate(ling = str_split(resposta, '\\., ')) %>%
unnest(ling) %>%
mutate(ling = str_replace(ling, '\\.$', ''), ling = fct_infreq(ling)) %>%
group_by(cec) %>%
mutate(ntot = n_distinct(id_pessoa)) %>%
group_by(cec, ling) %>%
summarise(n = n_distinct(id_pessoa), ntot = first(ntot)) %>%
mutate(prop = n / ntot) %>%
mutate(ling = str_wrap(ling, 20) %>% fct_reorder(prop, .desc = TRUE)) %>%
ggplot(aes(x = ling, fill = cec, y = prop)) +
geom_bar(position = 'dodge', stat = 'identity') +
scale_y_continuous(labels = scales::percent, limits = c(0, .7)) +
geom_text(aes(label = scales::percent(prop), group = cec),
position = position_dodge(.9), vjust = -.2) +
theme_bw(14) +
xlab('Linguagem de programação') +
ylab('Proporção de inscritos')
d_alunos %>%
gather(questao, resposta, matches('^[2]')) %>%
replace_na(list(resposta = 'Nenhuma')) %>%
mutate(ling = str_split(resposta, '\\., ')) %>%
unnest(ling) %>%
mutate(ling = str_replace(ling, '\\.$', '')) %>%
group_by(cec) %>%
mutate(ntot = n_distinct(id_pessoa)) %>%
group_by(cec, ling) %>%
summarise(n = n_distinct(id_pessoa), ntot = first(ntot)) %>%
mutate(prop = n / ntot) %>%
mutate(ling = str_wrap(ling, 20) %>% fct_reorder(prop, .desc = TRUE)) %>%
ggplot(aes(x = ling, fill = cec, y = prop)) +
geom_bar(position = 'dodge', stat = 'identity') +
scale_y_continuous(labels = scales::percent, limits = c(0, .7)) +
geom_text(aes(label = scales::percent(prop), group = cec),
position = position_dodge(.9), vjust = -.2) +
theme_bw(14) +
xlab('Linguagem de programação') +
ylab('Proporção de inscritos')
d_alunos %>%
gather(questao, resposta, matches('^[2]')) %>%
replace_na(list(resposta = 'Nenhuma')) %>%
mutate(ling = str_split(resposta, '\\., ')) %>%
unnest(ling) %>%
mutate(ling = str_replace(ling, '\\.$', ''), ling = fct_infreq(ling)) %>%
group_by(cec) %>%
mutate(ntot = n_distinct(id_pessoa)) %>%
group_by(cec, ling) %>%
summarise(n = n_distinct(id_pessoa), ntot = first(ntot)) %>%
mutate(prop = n / ntot) %>%
mutate(ling = str_wrap(ling, 20) %>% fct_reorder(prop, .desc = TRUE)) %>%
ggplot(aes(x = ling, fill = cec, y = prop)) +
geom_bar(position = 'dodge', stat = 'identity') +
scale_y_continuous(labels = scales::percent, limits = c(0, .7)) +
geom_text(aes(label = scales::percent(prop), group = cec),
position = position_dodge(.9), vjust = -.2) +
theme_bw(14) +
xlab('Linguagem de programação') +
ylab('Proporção de inscritos')
d_alunos %>%
gather(questao, resposta, matches('^[2]')) %>%
replace_na(list(resposta = 'Nenhuma')) %>%
mutate(ling = str_split(resposta, '\\., ')) %>%
unnest(ling) %>%
mutate(ling = str_replace(ling, '\\.$', '')) %>%
group_by(cec) %>%
mutate(ntot = n_distinct(id_pessoa)) %>%
group_by(cec, ling) %>%
summarise(n = n_distinct(id_pessoa), ntot = first(ntot)) %>%
mutate(prop = n / ntot) %>%
mutate(ling = str_wrap(ling, 20) %>% fct_reorder(prop, .desc = TRUE)) %>%
ggplot(aes(x = ling, fill = cec, y = prop)) +
geom_bar(position = 'dodge', stat = 'identity') +
scale_y_continuous(labels = scales::percent, limits = c(0, .7)) +
geom_text(aes(label = scales::percent(prop), group = cec),
position = position_dodge(.9), vjust = -.2) +
theme_bw(14) +
xlab('Linguagem de programação') +
ylab('Proporção de inscritos')
d_alunos %>%
gather(questao, resposta, matches('^[2]')) %>%
replace_na(list(resposta = 'Nenhuma')) %>%
mutate(ling = str_split(resposta, '\\., ')) %>%
unnest(ling) %>%
mutate(ling = str_replace(ling, '\\.$', ''), ling = fct_infreq(ling)) %>%
group_by(cec) %>%
mutate(ntot = n_distinct(id_pessoa)) %>%
group_by(cec, ling) %>%
summarise(n = n_distinct(id_pessoa), ntot = first(ntot)) %>%
mutate(prop = n / ntot) %>%
mutate(ling = str_wrap(ling, 20) %>% fct_reorder(prop, .desc = TRUE)) %>%
ggplot(aes(x = ling, fill = cec, y = prop)) +
geom_bar(position = 'dodge', stat = 'identity') +
scale_y_continuous(labels = scales::percent, limits = c(0, .7)) +
geom_text(aes(label = scales::percent(prop), group = cec),
position = position_dodge(.9), vjust = -.2) +
theme_bw(14) +
xlab('Linguagem de programação') +
ylab('Proporção de inscritos')
d_alunos %>%
gather(questao, resposta, matches('^[2]')) %>%
replace_na(list(resposta = 'Nenhuma')) %>%
mutate(ling = str_split(resposta, '\\., ')) %>%
unnest(ling) %>%
mutate(ling = str_replace(ling, '\\.$', '')) %>%
group_by(cec) %>%
mutate(ntot = n_distinct(id_pessoa)) %>%
group_by(cec, ling) %>%
summarise(n = n_distinct(id_pessoa), ntot = first(ntot)) %>%
mutate(prop = n / ntot) %>%
mutate(ling = str_wrap(ling, 20) %>% fct_reorder(prop, .desc = TRUE)) %>%
ggplot(aes(x = ling, fill = cec, y = prop)) +
geom_bar(position = 'dodge', stat = 'identity') +
scale_y_continuous(labels = scales::percent, limits = c(0, .7)) +
geom_text(aes(label = scales::percent(prop), group = cec),
position = position_dodge(.9), vjust = -.2) +
theme_bw(14) +
xlab('Linguagem de programação') +
ylab('Proporção de inscritos')
labs %>%
fct_lump(n = 5)
labs %>%
fct_lump(n = 10)
labs %>% fct_count
labs %>% fct_lump(n = 100)
labs %>% fct_lump(n = 100, other_level = 'outro')
labs %>% fct_lump(other_level = 'outros')
labs %>% fct_lump(prop = .30, other_level = 'outros')
labs %>% fct_lump(other_level = 'outros') %>% ggplot2::qplot()
labs %>% fct_lump(prop = .30, other_level = 'outros') %>% ggplot2::qplot()
labs %>% fct_lump(prop = .30, other_level = 'outros') %>% ggplot2::qplot()
labs %>% fct_lump(n = 30, other_level = 'outros') %>% ggplot2::qplot()
set.seed(123)
labs <- c('banana', 'maçã', 'laranja', 'limão', 'pêssego')[rbinom(1000, 4, .2) + 1]
labs %>% ggplot2::qplot()
library(forcats)
labs %>% fct_infreq() %>% ggplot2::qplot()
labs %>% fct_infreq() %>% ggplot2::qplot()
labs %>% ggplot2::qplot()
labs %>%
fct_collapse(cítrica = c('laranja', 'limão')) %>%
fct_infreq() %>%
ggplot2::qplot()
labs %>% fct_count()
labs %>% fct_lump(other_level = 'outros') %>% ggplot2::qplot()
labs %>% fct_lump(prop = .30, other_level = 'outros') %>% ggplot2::qplot()
labs %>% fct_lump(prop = .10, other_level = 'outros') %>% ggplot2::qplot()
labs %>% fct_lump(n = 1, other_level = 'outros') %>% ggplot2::qplot()
labs %>% fct_lump(other_level = 'outros') %>% ggplot2::qplot()
labs %>% fct_lump(prop = .10, other_level = 'outros') %>% ggplot2::qplot()
labs %>% fct_lump(n = 2, other_level = 'outros') %>% ggplot2::qplot()
labs %>% fct_lump(n = 1, other_level = 'outros') %>% ggplot2::qplot()
frases <- c('a roupa do rei', 'de roma', 'o rato roeu')
str_subset(frases, 'd[eo]')
string <- 'quero pegar só uma parte disso'
str_sub(string, 13, 14)
str_sub(string, -5, -1) # usar números negativos para voltar do final da string
indices <- str_locate(string, 'parte')
indices
str_sub(string, indices) # pode ser útil usar com str_locate.
string <- 'eu sei, usar virgulas, de forma, perfeita'
str_split(string, ', ')
str_split(string, ', ', simplify = TRUE)
library(stringr)
testes <- c('ban', 'banana', 'abandonado', 'pranab anderson', 'BANANA', 'ele levou ban')
expressoes <- list(
'ban', # reconhece tudo que tenha "ban", mas não ignora case
'BAN', # reconhece tudo que tenha "BAN", mas não ignora case
regex('ban', ignore_case = TRUE), # reconhece tudo que tenha "ban", ignorando case
'ban$', # reconhece apenas o que termina exatamente em "ban"
'^ban', # reconhece apenas o que começa exatamente com "ban"
'b ?an' # reconhece tudo que tenha "ban", com ou sem espaço entre o "b" e o "a"
)
purrr::map(testes, ~str_detect(testes, .x)) %>%
{do.call(rbind, .)} %>%
as.data.frame() %>%
setNames(testes) %>%
dplyr::mutate(regex = expressoes) %>%
dplyr::select(regex, dplyr::everything()) %>%
knitr::kable()
